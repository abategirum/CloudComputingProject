{"ast":null,"code":"var _jsxFileName = \"/Users/girumabate/Documents/CC-project/reactfolio/src/pages/articles.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport NavBar from \"../components/common/navBar\";\nimport Footer from \"../components/common/footer\";\nimport Logo from \"../components/common/logo\";\nimport Article from \"../components/articles/article\";\nimport INFO from \"../data/user\";\nimport SEO from \"../data/seo\";\nimport myArticles from \"../data/articles\";\nimport \"./styles/articles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Articles = () => {\n  _s();\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n  const currentSEO = SEO.find(item => item.page === \"articles\");\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: `Articles | ${INFO.main.title}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: currentSEO.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"keywords\",\n        content: currentSEO.keywords.join(\", \")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-content\",\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {\n        active: \"articles\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"articles-logo-container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"articles-logo\",\n            children: /*#__PURE__*/_jsxDEV(Logo, {\n              width: 46\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"articles-main-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"title articles-title\",\n            children: INFO.articles.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"subtitle articles-subtitle\",\n            children: INFO.articles.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"articles-container\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"articles-wrapper\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Sure, let's break down how each of these AWS services can be used to host and deliver your React portfolio website: ## Step 1: Amazon S3 (Simple Storage Service) Amazon S3 is an object storage service. For a static website like your React portfolio, you can use S3 to store and retrieve any amount of data at any time from anywhere on the web. Here's how you can do it: - Create a new S3 bucket. This bucket will hold all the static content of your website like HTML, CSS, JavaScript, and images. - Enable static website hosting for your S3 bucket. - Upload your React application's build directory to the S3 bucket. You can create a build directory by running `npm run build` in your React application's root directory. ## Step 2: Amazon CloudFront Amazon CloudFront is a content delivery network (CDN) service. It delivers data, videos, applications, and APIs to your viewers with low latency and high transfer speeds. Here's how you can use it: - Create a new CloudFront distribution. - For the \\\"Origin Domain Name\\\", choose the S3 bucket that you created in Step 1. - Enable \\\"Compress Objects Automatically\\\" to improve the performance. - For the \\\"Default Root Object\\\", enter `index.html`. - After creating the distribution, CloudFront will provide you with a unique URL, which you can use to access your website. ## Step 3: AWS Lambda AWS Lambda lets you run your code without provisioning or managing servers. You can use AWS Lambda to run your server-side code. AWS Lambda can be triggered by other AWS services like API Gateway. For a static React website, you might not need AWS Lambda. ## Step 4: Amazon Route 53 Amazon Route 53 is a scalable and highly available Domain Name System (DNS). Here's how you can use it: - Register a domain. This will be the URL where users can access your website. - Create a new \\\"Hosted zone\\\" and then create a \\\"Record Set\\\". - In the \\\"Record Set\\\", set the \\\"Alias\\\" to yes and for the \\\"Alias Target\\\", choose the CloudFront distribution that you created in Step 2. ## Step 5: AWS Certificate Manager AWS Certificate Manager is a service that lets you easily provision, manage, and deploy public and private Secure Sockets Layer/Transport Layer Security (SSL/TLS) certificates for use with AWS services. Here's how you can use it: - Request a new public certificate. - Enter your domain name that you registered in Step 4. - Validate the certificate by either DNS validation or email validation. - After the certificate is issued, you can modify your CloudFront distribution settings to use this certificate for HTTPS connections. Remember, each of these services needs to be configured properly for your specific use case. Always refer to the official AWS documentation or consult with a cloud solutions architect when implementing these steps. Happy blogging!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"page-footer\",\n          children: /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 3\n  }, this);\n};\n_s(Articles, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Articles;\nexport default Articles;\nvar _c;\n$RefreshReg$(_c, \"Articles\");","map":{"version":3,"names":["React","useEffect","Helmet","NavBar","Footer","Logo","Article","INFO","SEO","myArticles","jsxDEV","_jsxDEV","Articles","_s","window","scrollTo","currentSEO","find","item","page","Fragment","children","main","title","fileName","_jsxFileName","lineNumber","columnNumber","name","content","description","keywords","join","className","active","width","articles","_c","$RefreshReg$"],"sources":["/Users/girumabate/Documents/CC-project/reactfolio/src/pages/articles.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { Helmet } from \"react-helmet\";\n\nimport NavBar from \"../components/common/navBar\";\nimport Footer from \"../components/common/footer\";\nimport Logo from \"../components/common/logo\";\nimport Article from \"../components/articles/article\";\n\nimport INFO from \"../data/user\";\nimport SEO from \"../data/seo\";\nimport myArticles from \"../data/articles\";\n\nimport \"./styles/articles.css\";\n\nconst Articles = () => {\n\tuseEffect(() => {\n\t\twindow.scrollTo(0, 0);\n\t}, []);\n\n\tconst currentSEO = SEO.find((item) => item.page === \"articles\");\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Helmet>\n\t\t\t\t<title>{`Articles | ${INFO.main.title}`}</title>\n\t\t\t\t<meta name=\"description\" content={currentSEO.description} />\n\t\t\t\t<meta\n\t\t\t\t\tname=\"keywords\"\n\t\t\t\t\tcontent={currentSEO.keywords.join(\", \")}\n\t\t\t\t/>\n\t\t\t</Helmet>\n\n\t\t\t<div className=\"page-content\">\n\t\t\t\t<NavBar active=\"articles\" />\n\t\t\t\t<div className=\"content-wrapper\">\n\t\t\t\t\t<div className=\"articles-logo-container\">\n\t\t\t\t\t\t<div className=\"articles-logo\">\n\t\t\t\t\t\t\t<Logo width={46} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"articles-main-container\">\n\t\t\t\t\t\t<div className=\"title articles-title\">\n\t\t\t\t\t\t\t{INFO.articles.title}\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className=\"subtitle articles-subtitle\">\n\t\t\t\t\t\t\t{INFO.articles.description}\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className=\"articles-container\">\n\t\t\t\t\t\t\t<div className=\"articles-wrapper\">\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\tSure, let's break down how each of these AWS services can be used to host and deliver your React portfolio website:\n\n## Step 1: Amazon S3 (Simple Storage Service)\n\nAmazon S3 is an object storage service. For a static website like your React portfolio, you can use S3 to store and retrieve any amount of data at any time from anywhere on the web. Here's how you can do it:\n\n- Create a new S3 bucket. This bucket will hold all the static content of your website like HTML, CSS, JavaScript, and images.\n- Enable static website hosting for your S3 bucket.\n- Upload your React application's build directory to the S3 bucket. You can create a build directory by running `npm run build` in your React application's root directory.\n\n## Step 2: Amazon CloudFront\n\nAmazon CloudFront is a content delivery network (CDN) service. It delivers data, videos, applications, and APIs to your viewers with low latency and high transfer speeds. Here's how you can use it:\n\n- Create a new CloudFront distribution.\n- For the \"Origin Domain Name\", choose the S3 bucket that you created in Step 1.\n- Enable \"Compress Objects Automatically\" to improve the performance.\n- For the \"Default Root Object\", enter `index.html`.\n- After creating the distribution, CloudFront will provide you with a unique URL, which you can use to access your website.\n\n## Step 3: AWS Lambda\n\nAWS Lambda lets you run your code without provisioning or managing servers. You can use AWS Lambda to run your server-side code. AWS Lambda can be triggered by other AWS services like API Gateway. For a static React website, you might not need AWS Lambda.\n\n## Step 4: Amazon Route 53\n\nAmazon Route 53 is a scalable and highly available Domain Name System (DNS). Here's how you can use it:\n\n- Register a domain. This will be the URL where users can access your website.\n- Create a new \"Hosted zone\" and then create a \"Record Set\".\n- In the \"Record Set\", set the \"Alias\" to yes and for the \"Alias Target\", choose the CloudFront distribution that you created in Step 2.\n\n## Step 5: AWS Certificate Manager\n\nAWS Certificate Manager is a service that lets you easily provision, manage, and deploy public and private Secure Sockets Layer/Transport Layer Security (SSL/TLS) certificates for use with AWS services. Here's how you can use it:\n\n- Request a new public certificate.\n- Enter your domain name that you registered in Step 4.\n- Validate the certificate by either DNS validation or email validation.\n- After the certificate is issued, you can modify your CloudFront distribution settings to use this certificate for HTTPS connections.\n\nRemember, each of these services needs to be configured properly for your specific use case. Always refer to the official AWS documentation or consult with a cloud solutions architect when implementing these steps. Happy blogging!\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"page-footer\">\n\t\t\t\t\t\t<Footer />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</React.Fragment>\n\t);\n};\n\nexport default Articles;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}